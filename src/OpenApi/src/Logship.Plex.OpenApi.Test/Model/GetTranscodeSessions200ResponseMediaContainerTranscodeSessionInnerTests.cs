/*
 * Plex Media Server API
 *
 * This is an unofficial OpenAPI specification for the Plex Media Server API. 
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Logship.Plex.OpenApi.Model;
using Logship.Plex.OpenApi.Client;
using System.Reflection;

namespace Logship.Plex.OpenApi.Test.Model
{
    /// <summary>
    ///  Class for testing GetTranscodeSessions200ResponseMediaContainerTranscodeSessionInner
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class GetTranscodeSessions200ResponseMediaContainerTranscodeSessionInnerTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for GetTranscodeSessions200ResponseMediaContainerTranscodeSessionInner
        //private GetTranscodeSessions200ResponseMediaContainerTranscodeSessionInner instance;

        public GetTranscodeSessions200ResponseMediaContainerTranscodeSessionInnerTests()
        {
            // TODO uncomment below to create an instance of GetTranscodeSessions200ResponseMediaContainerTranscodeSessionInner
            //instance = new GetTranscodeSessions200ResponseMediaContainerTranscodeSessionInner();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GetTranscodeSessions200ResponseMediaContainerTranscodeSessionInner
        /// </summary>
        [Fact]
        public void GetTranscodeSessions200ResponseMediaContainerTranscodeSessionInnerInstanceTest()
        {
            // TODO uncomment below to test "IsType" GetTranscodeSessions200ResponseMediaContainerTranscodeSessionInner
            //Assert.IsType<GetTranscodeSessions200ResponseMediaContainerTranscodeSessionInner>(instance);
        }

        /// <summary>
        /// Test the property 'Key'
        /// </summary>
        [Fact]
        public void KeyTest()
        {
            // TODO unit test for the property 'Key'
        }

        /// <summary>
        /// Test the property 'Throttled'
        /// </summary>
        [Fact]
        public void ThrottledTest()
        {
            // TODO unit test for the property 'Throttled'
        }

        /// <summary>
        /// Test the property 'Complete'
        /// </summary>
        [Fact]
        public void CompleteTest()
        {
            // TODO unit test for the property 'Complete'
        }

        /// <summary>
        /// Test the property 'Progress'
        /// </summary>
        [Fact]
        public void ProgressTest()
        {
            // TODO unit test for the property 'Progress'
        }

        /// <summary>
        /// Test the property 'Size'
        /// </summary>
        [Fact]
        public void SizeTest()
        {
            // TODO unit test for the property 'Size'
        }

        /// <summary>
        /// Test the property 'Speed'
        /// </summary>
        [Fact]
        public void SpeedTest()
        {
            // TODO unit test for the property 'Speed'
        }

        /// <summary>
        /// Test the property 'Error'
        /// </summary>
        [Fact]
        public void ErrorTest()
        {
            // TODO unit test for the property 'Error'
        }

        /// <summary>
        /// Test the property 'Duration'
        /// </summary>
        [Fact]
        public void DurationTest()
        {
            // TODO unit test for the property 'Duration'
        }

        /// <summary>
        /// Test the property 'Remaining'
        /// </summary>
        [Fact]
        public void RemainingTest()
        {
            // TODO unit test for the property 'Remaining'
        }

        /// <summary>
        /// Test the property 'Context'
        /// </summary>
        [Fact]
        public void ContextTest()
        {
            // TODO unit test for the property 'Context'
        }

        /// <summary>
        /// Test the property 'SourceVideoCodec'
        /// </summary>
        [Fact]
        public void SourceVideoCodecTest()
        {
            // TODO unit test for the property 'SourceVideoCodec'
        }

        /// <summary>
        /// Test the property 'SourceAudioCodec'
        /// </summary>
        [Fact]
        public void SourceAudioCodecTest()
        {
            // TODO unit test for the property 'SourceAudioCodec'
        }

        /// <summary>
        /// Test the property 'VideoDecision'
        /// </summary>
        [Fact]
        public void VideoDecisionTest()
        {
            // TODO unit test for the property 'VideoDecision'
        }

        /// <summary>
        /// Test the property 'AudioDecision'
        /// </summary>
        [Fact]
        public void AudioDecisionTest()
        {
            // TODO unit test for the property 'AudioDecision'
        }

        /// <summary>
        /// Test the property 'SubtitleDecision'
        /// </summary>
        [Fact]
        public void SubtitleDecisionTest()
        {
            // TODO unit test for the property 'SubtitleDecision'
        }

        /// <summary>
        /// Test the property 'Protocol'
        /// </summary>
        [Fact]
        public void ProtocolTest()
        {
            // TODO unit test for the property 'Protocol'
        }

        /// <summary>
        /// Test the property 'Container'
        /// </summary>
        [Fact]
        public void ContainerTest()
        {
            // TODO unit test for the property 'Container'
        }

        /// <summary>
        /// Test the property 'VideoCodec'
        /// </summary>
        [Fact]
        public void VideoCodecTest()
        {
            // TODO unit test for the property 'VideoCodec'
        }

        /// <summary>
        /// Test the property 'AudioCodec'
        /// </summary>
        [Fact]
        public void AudioCodecTest()
        {
            // TODO unit test for the property 'AudioCodec'
        }

        /// <summary>
        /// Test the property 'AudioChannels'
        /// </summary>
        [Fact]
        public void AudioChannelsTest()
        {
            // TODO unit test for the property 'AudioChannels'
        }

        /// <summary>
        /// Test the property 'TranscodeHwRequested'
        /// </summary>
        [Fact]
        public void TranscodeHwRequestedTest()
        {
            // TODO unit test for the property 'TranscodeHwRequested'
        }

        /// <summary>
        /// Test the property 'TimeStamp'
        /// </summary>
        [Fact]
        public void TimeStampTest()
        {
            // TODO unit test for the property 'TimeStamp'
        }

        /// <summary>
        /// Test the property 'MaxOffsetAvailable'
        /// </summary>
        [Fact]
        public void MaxOffsetAvailableTest()
        {
            // TODO unit test for the property 'MaxOffsetAvailable'
        }

        /// <summary>
        /// Test the property 'MinOffsetAvailable'
        /// </summary>
        [Fact]
        public void MinOffsetAvailableTest()
        {
            // TODO unit test for the property 'MinOffsetAvailable'
        }
    }
}
