/*
 * Plex Media Server API
 *
 * This is an unofficial OpenAPI specification for the Plex Media Server API. 
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Logship.Plex.OpenApi.Model;
using Logship.Plex.OpenApi.Client;
using System.Reflection;

namespace Logship.Plex.OpenApi.Test.Model
{
    /// <summary>
    ///  Class for testing GetAvailableClients200ResponseMediaContainerServerInner
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class GetAvailableClients200ResponseMediaContainerServerInnerTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for GetAvailableClients200ResponseMediaContainerServerInner
        //private GetAvailableClients200ResponseMediaContainerServerInner instance;

        public GetAvailableClients200ResponseMediaContainerServerInnerTests()
        {
            // TODO uncomment below to create an instance of GetAvailableClients200ResponseMediaContainerServerInner
            //instance = new GetAvailableClients200ResponseMediaContainerServerInner();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of GetAvailableClients200ResponseMediaContainerServerInner
        /// </summary>
        [Fact]
        public void GetAvailableClients200ResponseMediaContainerServerInnerInstanceTest()
        {
            // TODO uncomment below to test "IsType" GetAvailableClients200ResponseMediaContainerServerInner
            //Assert.IsType<GetAvailableClients200ResponseMediaContainerServerInner>(instance);
        }

        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Fact]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }

        /// <summary>
        /// Test the property 'Host'
        /// </summary>
        [Fact]
        public void HostTest()
        {
            // TODO unit test for the property 'Host'
        }

        /// <summary>
        /// Test the property 'Address'
        /// </summary>
        [Fact]
        public void AddressTest()
        {
            // TODO unit test for the property 'Address'
        }

        /// <summary>
        /// Test the property 'Port'
        /// </summary>
        [Fact]
        public void PortTest()
        {
            // TODO unit test for the property 'Port'
        }

        /// <summary>
        /// Test the property 'MachineIdentifier'
        /// </summary>
        [Fact]
        public void MachineIdentifierTest()
        {
            // TODO unit test for the property 'MachineIdentifier'
        }

        /// <summary>
        /// Test the property 'VarVersion'
        /// </summary>
        [Fact]
        public void VarVersionTest()
        {
            // TODO unit test for the property 'VarVersion'
        }

        /// <summary>
        /// Test the property 'Protocol'
        /// </summary>
        [Fact]
        public void ProtocolTest()
        {
            // TODO unit test for the property 'Protocol'
        }

        /// <summary>
        /// Test the property 'Product'
        /// </summary>
        [Fact]
        public void ProductTest()
        {
            // TODO unit test for the property 'Product'
        }

        /// <summary>
        /// Test the property 'DeviceClass'
        /// </summary>
        [Fact]
        public void DeviceClassTest()
        {
            // TODO unit test for the property 'DeviceClass'
        }

        /// <summary>
        /// Test the property 'ProtocolVersion'
        /// </summary>
        [Fact]
        public void ProtocolVersionTest()
        {
            // TODO unit test for the property 'ProtocolVersion'
        }

        /// <summary>
        /// Test the property 'ProtocolCapabilities'
        /// </summary>
        [Fact]
        public void ProtocolCapabilitiesTest()
        {
            // TODO unit test for the property 'ProtocolCapabilities'
        }
    }
}
