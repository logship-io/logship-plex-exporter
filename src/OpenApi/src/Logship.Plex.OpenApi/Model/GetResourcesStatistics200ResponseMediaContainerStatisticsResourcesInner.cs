// <auto-generated>
/*
 * Plex API
 *
 * Plex OpenAPI Spec 
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization.Metadata;
using Logship.Plex.OpenApi.Client;

namespace Logship.Plex.OpenApi.Model
{
    /// <summary>
    /// GetResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner
    /// </summary>
    public partial class GetResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner" /> class.
        /// </summary>
        /// <param name="timespan">timespan</param>
        /// <param name="at">at</param>
        /// <param name="hostCpuUtilization">hostCpuUtilization</param>
        /// <param name="processCpuUtilization">processCpuUtilization</param>
        /// <param name="hostMemoryUtilization">hostMemoryUtilization</param>
        /// <param name="processMemoryUtilization">processMemoryUtilization</param>
        [JsonConstructor]
        public GetResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner(Option<int?> timespan = default, Option<int?> at = default, Option<float?> hostCpuUtilization = default, Option<float?> processCpuUtilization = default, Option<float?> hostMemoryUtilization = default, Option<float?> processMemoryUtilization = default)
        {
            TimespanOption = timespan;
            AtOption = at;
            HostCpuUtilizationOption = hostCpuUtilization;
            ProcessCpuUtilizationOption = processCpuUtilization;
            HostMemoryUtilizationOption = hostMemoryUtilization;
            ProcessMemoryUtilizationOption = processMemoryUtilization;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of Timespan
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> TimespanOption { get; private set; }

        /// <summary>
        /// Gets or Sets Timespan
        /// </summary>
        /* <example>6</example> */
        [JsonPropertyName("timespan")]
        public int? Timespan { get { return this.TimespanOption; } set { this.TimespanOption = new(value); } }

        /// <summary>
        /// Used to track the state of At
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> AtOption { get; private set; }

        /// <summary>
        /// Gets or Sets At
        /// </summary>
        /* <example>1718384427</example> */
        [JsonPropertyName("at")]
        public int? At { get { return this.AtOption; } set { this.AtOption = new(value); } }

        /// <summary>
        /// Used to track the state of HostCpuUtilization
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<float?> HostCpuUtilizationOption { get; private set; }

        /// <summary>
        /// Gets or Sets HostCpuUtilization
        /// </summary>
        /* <example>1.276</example> */
        [JsonPropertyName("hostCpuUtilization")]
        public float? HostCpuUtilization { get { return this.HostCpuUtilizationOption; } set { this.HostCpuUtilizationOption = new(value); } }

        /// <summary>
        /// Used to track the state of ProcessCpuUtilization
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<float?> ProcessCpuUtilizationOption { get; private set; }

        /// <summary>
        /// Gets or Sets ProcessCpuUtilization
        /// </summary>
        /* <example>0.025</example> */
        [JsonPropertyName("processCpuUtilization")]
        public float? ProcessCpuUtilization { get { return this.ProcessCpuUtilizationOption; } set { this.ProcessCpuUtilizationOption = new(value); } }

        /// <summary>
        /// Used to track the state of HostMemoryUtilization
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<float?> HostMemoryUtilizationOption { get; private set; }

        /// <summary>
        /// Gets or Sets HostMemoryUtilization
        /// </summary>
        /* <example>17.026</example> */
        [JsonPropertyName("hostMemoryUtilization")]
        public float? HostMemoryUtilization { get { return this.HostMemoryUtilizationOption; } set { this.HostMemoryUtilizationOption = new(value); } }

        /// <summary>
        /// Used to track the state of ProcessMemoryUtilization
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<float?> ProcessMemoryUtilizationOption { get; private set; }

        /// <summary>
        /// Gets or Sets ProcessMemoryUtilization
        /// </summary>
        /* <example>0.493</example> */
        [JsonPropertyName("processMemoryUtilization")]
        public float? ProcessMemoryUtilization { get { return this.ProcessMemoryUtilizationOption; } set { this.ProcessMemoryUtilizationOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner {\n");
            sb.Append("  Timespan: ").Append(Timespan).Append("\n");
            sb.Append("  At: ").Append(At).Append("\n");
            sb.Append("  HostCpuUtilization: ").Append(HostCpuUtilization).Append("\n");
            sb.Append("  ProcessCpuUtilization: ").Append(ProcessCpuUtilization).Append("\n");
            sb.Append("  HostMemoryUtilization: ").Append(HostMemoryUtilization).Append("\n");
            sb.Append("  ProcessMemoryUtilization: ").Append(ProcessMemoryUtilization).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="GetResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner" />
    /// </summary>
    public class GetResourcesStatistics200ResponseMediaContainerStatisticsResourcesInnerJsonConverter : JsonConverter<GetResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner>
    {
        /// <summary>
        /// Deserializes json to <see cref="GetResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override GetResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<int?> timespan = default;
            Option<int?> at = default;
            Option<float?> hostCpuUtilization = default;
            Option<float?> processCpuUtilization = default;
            Option<float?> hostMemoryUtilization = default;
            Option<float?> processMemoryUtilization = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "timespan":
                            timespan = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "at":
                            at = new Option<int?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (int?)null : utf8JsonReader.GetInt32());
                            break;
                        case "hostCpuUtilization":
                            hostCpuUtilization = new Option<float?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (float?)null : (float)utf8JsonReader.GetDouble());
                            break;
                        case "processCpuUtilization":
                            processCpuUtilization = new Option<float?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (float?)null : (float)utf8JsonReader.GetDouble());
                            break;
                        case "hostMemoryUtilization":
                            hostMemoryUtilization = new Option<float?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (float?)null : (float)utf8JsonReader.GetDouble());
                            break;
                        case "processMemoryUtilization":
                            processMemoryUtilization = new Option<float?>(utf8JsonReader.TokenType == JsonTokenType.Null ? (float?)null : (float)utf8JsonReader.GetDouble());
                            break;
                        default:
                            break;
                    }
                }
            }

            if (timespan.IsSet && timespan.Value == null)
                throw new ArgumentNullException(nameof(timespan), "Property is not nullable for class GetResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner.");

            if (at.IsSet && at.Value == null)
                throw new ArgumentNullException(nameof(at), "Property is not nullable for class GetResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner.");

            if (hostCpuUtilization.IsSet && hostCpuUtilization.Value == null)
                throw new ArgumentNullException(nameof(hostCpuUtilization), "Property is not nullable for class GetResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner.");

            if (processCpuUtilization.IsSet && processCpuUtilization.Value == null)
                throw new ArgumentNullException(nameof(processCpuUtilization), "Property is not nullable for class GetResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner.");

            if (hostMemoryUtilization.IsSet && hostMemoryUtilization.Value == null)
                throw new ArgumentNullException(nameof(hostMemoryUtilization), "Property is not nullable for class GetResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner.");

            if (processMemoryUtilization.IsSet && processMemoryUtilization.Value == null)
                throw new ArgumentNullException(nameof(processMemoryUtilization), "Property is not nullable for class GetResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner.");

            return new GetResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner(timespan, at, hostCpuUtilization, processCpuUtilization, hostMemoryUtilization, processMemoryUtilization);
        }

        /// <summary>
        /// Serializes a <see cref="GetResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="getResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, GetResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner getResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, getResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="GetResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="getResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, GetResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner getResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner, JsonSerializerOptions jsonSerializerOptions)
        {
            if (getResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner.TimespanOption.IsSet)
                writer.WriteNumber("timespan", getResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner.TimespanOption.Value!.Value);

            if (getResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner.AtOption.IsSet)
                writer.WriteNumber("at", getResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner.AtOption.Value!.Value);

            if (getResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner.HostCpuUtilizationOption.IsSet)
                writer.WriteNumber("hostCpuUtilization", getResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner.HostCpuUtilizationOption.Value!.Value);

            if (getResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner.ProcessCpuUtilizationOption.IsSet)
                writer.WriteNumber("processCpuUtilization", getResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner.ProcessCpuUtilizationOption.Value!.Value);

            if (getResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner.HostMemoryUtilizationOption.IsSet)
                writer.WriteNumber("hostMemoryUtilization", getResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner.HostMemoryUtilizationOption.Value!.Value);

            if (getResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner.ProcessMemoryUtilizationOption.IsSet)
                writer.WriteNumber("processMemoryUtilization", getResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner.ProcessMemoryUtilizationOption.Value!.Value);
        }
    }

    /// <summary>
    /// The GetResourcesStatistics200ResponseMediaContainerStatisticsResourcesInnerSerializationContext
    /// </summary>
    [JsonSourceGenerationOptions(WriteIndented = true, GenerationMode = JsonSourceGenerationMode.Metadata | JsonSourceGenerationMode.Serialization)]
    [JsonSerializable(typeof(GetResourcesStatistics200ResponseMediaContainerStatisticsResourcesInner))]
    public partial class GetResourcesStatistics200ResponseMediaContainerStatisticsResourcesInnerSerializationContext : JsonSerializerContext { }
}
