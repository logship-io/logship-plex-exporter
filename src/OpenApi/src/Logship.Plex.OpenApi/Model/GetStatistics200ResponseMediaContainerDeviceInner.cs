// <auto-generated>
/*
 * Plex API
 *
 * Plex OpenAPI Spec 
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using System.Text.Json.Serialization.Metadata;
using Logship.Plex.OpenApi.Client;

namespace Logship.Plex.OpenApi.Model
{
    /// <summary>
    /// GetStatistics200ResponseMediaContainerDeviceInner
    /// </summary>
    public partial class GetStatistics200ResponseMediaContainerDeviceInner : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetStatistics200ResponseMediaContainerDeviceInner" /> class.
        /// </summary>
        /// <param name="id">id</param>
        /// <param name="name">name</param>
        /// <param name="platform">platform</param>
        /// <param name="clientIdentifier">clientIdentifier</param>
        /// <param name="createdAt">createdAt</param>
        [JsonConstructor]
        public GetStatistics200ResponseMediaContainerDeviceInner(Option<int?> id = default, Option<string?> name = default, Option<string?> platform = default, Option<string?> clientIdentifier = default, Option<int?> createdAt = default)
        {
            IdOption = id;
            NameOption = name;
            PlatformOption = platform;
            ClientIdentifierOption = clientIdentifier;
            CreatedAtOption = createdAt;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Used to track the state of Id
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> IdOption { get; private set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        /* <example>208</example> */
        [JsonPropertyName("id")]
        public int? Id { get { return this.IdOption; } set { this.IdOption = new(value); } }

        /// <summary>
        /// Used to track the state of Name
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> NameOption { get; private set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        /* <example>Roku Express</example> */
        [JsonPropertyName("name")]
        public string? Name { get { return this.NameOption; } set { this.NameOption = new(value); } }

        /// <summary>
        /// Used to track the state of Platform
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> PlatformOption { get; private set; }

        /// <summary>
        /// Gets or Sets Platform
        /// </summary>
        /* <example>Roku</example> */
        [JsonPropertyName("platform")]
        public string? Platform { get { return this.PlatformOption; } set { this.PlatformOption = new(value); } }

        /// <summary>
        /// Used to track the state of ClientIdentifier
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<string?> ClientIdentifierOption { get; private set; }

        /// <summary>
        /// Gets or Sets ClientIdentifier
        /// </summary>
        /* <example>793095d235660625108ef785cc7646e9</example> */
        [JsonPropertyName("clientIdentifier")]
        public string? ClientIdentifier { get { return this.ClientIdentifierOption; } set { this.ClientIdentifierOption = new(value); } }

        /// <summary>
        /// Used to track the state of CreatedAt
        /// </summary>
        [JsonIgnore]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public Option<int?> CreatedAtOption { get; private set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        /* <example>1706470556</example> */
        [JsonPropertyName("createdAt")]
        public int? CreatedAt { get { return this.CreatedAtOption; } set { this.CreatedAtOption = new(value); } }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetStatistics200ResponseMediaContainerDeviceInner {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Platform: ").Append(Platform).Append("\n");
            sb.Append("  ClientIdentifier: ").Append(ClientIdentifier).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="GetStatistics200ResponseMediaContainerDeviceInner" />
    /// </summary>
    public class GetStatistics200ResponseMediaContainerDeviceInnerJsonConverter : JsonConverter<GetStatistics200ResponseMediaContainerDeviceInner>
    {
        /// <summary>
        /// Deserializes json to <see cref="GetStatistics200ResponseMediaContainerDeviceInner" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override GetStatistics200ResponseMediaContainerDeviceInner Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<int?> id = default;
            Option<string?> name = default;
            Option<string?> platform = default;
            Option<string?> clientIdentifier = default;
            Option<int?> createdAt = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "id":
                            if (utf8JsonReader.TokenType != JsonTokenType.Null)
                                id = new Option<int?>(utf8JsonReader.GetInt32());
                            break;
                        case "name":
                            name = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "platform":
                            platform = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "clientIdentifier":
                            clientIdentifier = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "createdAt":
                            if (utf8JsonReader.TokenType != JsonTokenType.Null)
                                createdAt = new Option<int?>(utf8JsonReader.GetInt32());
                            break;
                        default:
                            break;
                    }
                }
            }

            if (id.IsSet && id.Value == null)
                throw new ArgumentNullException(nameof(id), "Property is not nullable for class GetStatistics200ResponseMediaContainerDeviceInner.");

            if (name.IsSet && name.Value == null)
                throw new ArgumentNullException(nameof(name), "Property is not nullable for class GetStatistics200ResponseMediaContainerDeviceInner.");

            if (platform.IsSet && platform.Value == null)
                throw new ArgumentNullException(nameof(platform), "Property is not nullable for class GetStatistics200ResponseMediaContainerDeviceInner.");

            if (clientIdentifier.IsSet && clientIdentifier.Value == null)
                throw new ArgumentNullException(nameof(clientIdentifier), "Property is not nullable for class GetStatistics200ResponseMediaContainerDeviceInner.");

            if (createdAt.IsSet && createdAt.Value == null)
                throw new ArgumentNullException(nameof(createdAt), "Property is not nullable for class GetStatistics200ResponseMediaContainerDeviceInner.");

            return new GetStatistics200ResponseMediaContainerDeviceInner(id, name, platform, clientIdentifier, createdAt);
        }

        /// <summary>
        /// Serializes a <see cref="GetStatistics200ResponseMediaContainerDeviceInner" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="getStatistics200ResponseMediaContainerDeviceInner"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, GetStatistics200ResponseMediaContainerDeviceInner getStatistics200ResponseMediaContainerDeviceInner, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, getStatistics200ResponseMediaContainerDeviceInner, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="GetStatistics200ResponseMediaContainerDeviceInner" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="getStatistics200ResponseMediaContainerDeviceInner"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, GetStatistics200ResponseMediaContainerDeviceInner getStatistics200ResponseMediaContainerDeviceInner, JsonSerializerOptions jsonSerializerOptions)
        {
            if (getStatistics200ResponseMediaContainerDeviceInner.NameOption.IsSet && getStatistics200ResponseMediaContainerDeviceInner.Name == null)
                throw new ArgumentNullException(nameof(getStatistics200ResponseMediaContainerDeviceInner.Name), "Property is required for class GetStatistics200ResponseMediaContainerDeviceInner.");

            if (getStatistics200ResponseMediaContainerDeviceInner.PlatformOption.IsSet && getStatistics200ResponseMediaContainerDeviceInner.Platform == null)
                throw new ArgumentNullException(nameof(getStatistics200ResponseMediaContainerDeviceInner.Platform), "Property is required for class GetStatistics200ResponseMediaContainerDeviceInner.");

            if (getStatistics200ResponseMediaContainerDeviceInner.ClientIdentifierOption.IsSet && getStatistics200ResponseMediaContainerDeviceInner.ClientIdentifier == null)
                throw new ArgumentNullException(nameof(getStatistics200ResponseMediaContainerDeviceInner.ClientIdentifier), "Property is required for class GetStatistics200ResponseMediaContainerDeviceInner.");

            if (getStatistics200ResponseMediaContainerDeviceInner.IdOption.IsSet)
                writer.WriteNumber("id", getStatistics200ResponseMediaContainerDeviceInner.IdOption.Value!.Value);

            if (getStatistics200ResponseMediaContainerDeviceInner.NameOption.IsSet)
                writer.WriteString("name", getStatistics200ResponseMediaContainerDeviceInner.Name);

            if (getStatistics200ResponseMediaContainerDeviceInner.PlatformOption.IsSet)
                writer.WriteString("platform", getStatistics200ResponseMediaContainerDeviceInner.Platform);

            if (getStatistics200ResponseMediaContainerDeviceInner.ClientIdentifierOption.IsSet)
                writer.WriteString("clientIdentifier", getStatistics200ResponseMediaContainerDeviceInner.ClientIdentifier);

            if (getStatistics200ResponseMediaContainerDeviceInner.CreatedAtOption.IsSet)
                writer.WriteNumber("createdAt", getStatistics200ResponseMediaContainerDeviceInner.CreatedAtOption.Value!.Value);
        }
    }

    /// <summary>
    /// The GetStatistics200ResponseMediaContainerDeviceInnerSerializationContext
    /// </summary>
    [JsonSourceGenerationOptions(WriteIndented = true, GenerationMode = JsonSourceGenerationMode.Metadata | JsonSourceGenerationMode.Serialization)]
    [JsonSerializable(typeof(GetStatistics200ResponseMediaContainerDeviceInner))]
    public partial class GetStatistics200ResponseMediaContainerDeviceInnerSerializationContext : JsonSerializerContext { }
}
